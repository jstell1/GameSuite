plugins {
    id 'application'
    id 'java'
}

dependencies {
    implementation project(':Core')
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.5.3'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2'
    implementation 'com.google.guava:guava:33.0.0-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

application {
    mainClass = 'gamesuite.client.App'
}

run {
    standardInput = System.in
}

tasks.register('runCli', JavaExec) {
    group = 'application'
    description = 'Runs the application in CLI mode'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = application.mainClass
    args = ['cli']
    standardInput = System.in
}


tasks.register('fatJar', Jar) {
    archiveClassifier.set('all')
    manifest {
        attributes('Main-Class': 'gamesuite.client.App')
    }
    from(sourceSets.main.output)

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}